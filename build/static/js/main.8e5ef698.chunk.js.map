{"version":3,"sources":["hoc/Layout/Layout.js","Components/About/About.js","Components/Navigation/Nav.js","Components/UI/Input/Input.js","store/actions/actionTypes.js","store/actions/auth.js","Components/Authorization/Auth.js","store/actions/map.js","hoc/MapWrapper/MapWrapper.js","Components/Map/Map.js","Components/Logout/Logout.js","App.js","store/reducers/auth.js","store/reducers/zoom.js","store/reducers/toggle.js","store/reducers/center.js","store/reducers/markers.js","store/reducers/loadedStatus.js","store/reducers/rootReducer.js","index.js"],"names":["Layout","react_default","a","createElement","this","props","children","Component","About","mdbreact","fluid","className","style","height","alignItems","center","Nav","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClick","setState","collapse","state","toggle","modal","isWideEnough","color","dark","expand","size","side","position","backdrop","isOpen","titleClass","tag","to","navbar","left","exact","right","React","Input","inputType","type","label","value","onChange","_ref","valid","touched","shouldValidate","length","isInvalid","errorMessage","AUTH_SUCCESS","AUTH_LOGOUT","MAP_ZOOMIN","MAP_ZOOMOUT","MARKERS_ON","MARKERS_OFF","SET_CENTER","CURRENT_MARKERS","LOADED_STATUS","autoLogout","time","dispatch","setTimeout","logout","localStorage","removeItem","authSuccess","token","Auth","isFormValid","formControls","email","validation","required","password","minLength","submitHandler","event","preventDefault","loginBtn","auth","registerBtn","onChangeHandler","controlName","objectSpread","control","target","validateControl","keys","forEach","name","isValid","trim","is","_this2","map","index","UI_Input_Input","key","count","padding","xl","onSubmit","renderInputs","connect","isLogin","asyncToGenerator","regenerator_default","mark","_callee2","authData","url","wrap","_context2","prev","next","returnSecureToken","_callee","rawResponse","data","expirationDate","_context","fetch","method","body","JSON","stringify","sent","json","Date","getTime","expiresIn","setItem","idToken","localId","stop","_x","apply","arguments","zoomMap","toggleMarkers","setCenter","currentCenter","currentMarkers","markers","setMarkers","loadedMarkersStatus","status","loadedStatus","Wrapper","GoogleApiWrapper","apiKey","language","MapContainer","_isMounted","google","scrollwheel","disableDefaultUI","currentMarker","markersPosition","showingInfoWindow","activeMarker","selectedPlace","currentUserId","getItem","markersCopy","dataBase","saveStatus","onMapChange","l","c","lat","latLng","lng","copy","push","zoomInMap","zoomOutMap","onMarkerClick","marker","turnOffOn","loadMarkers","loaded","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","item","userId","geo","concat","err","return","saveMarkers","update","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onChooseHandler","maps","Map","request","location","radius","requestedData","places","PlacesService","nearbySearch","results","res","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","geometry","rating","icon","centerMoved","mapProps","mapCenter","pos","dist","title","_this3","headers","Content-type","then","response","catch","error","console","log","_this4","setMarker","_this5","zIndex","pill","marginLeft","marginBottom","display","caret","defaultValue","currentSelected","MapWrapper","onDragend","disableDoubleClickZoom","zoomControl","scaleControl","gestureHandling","onReady","window","zoom","initialCenter","visible","loadStatus","Logout","Redirect","App","autoLogin","nav","routes","Switch","Route","path","component","isAuthenticated","Navigation_Nav","hoc_Layout_Layout","withRouter","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","application","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e5ef698.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Layout.css';\nclass Layout extends Component {\n    render(){\n        return (\n            <header>\n                { this.props.children }\n            </header>\n        )\n    }\n}\n\nexport default Layout;","import React from \"react\";\nimport { MDBContainer, Card, CardBody, CardTitle, Row } from \"mdbreact\";\nimport \"./About.css\";\n\nexport const About = props => {\n  return (\n    <MDBContainer fluid className=\"about-container\">\n      <Row style={{ height: \"100vh\", alignItems: \"center\" }} center>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"display-4 text-align-center\">My React first application</CardTitle>\n            <p className=\"h2-responsive\">\n              This small application was built in a week.\n            </p>\n            <p className=\"h3-responsive\">Started on</p>\n            <p className=\"h4-responsive\">19/11/2018</p>\n            <p className=\"h5-responsive\">Ended on</p>\n            <p className=\"h4-responsive\">26/11/2018</p>\n            <p className=\"h5-responsive\">Updated on 07/12/2018</p>\n            <p className=\"h5-responsive\">Second update on 30/12/2018 (small one)</p>\n            <p className=\"h5-responsive\">P.S: This is my first App ( ͡° ͜ʖ ͡°)</p>\n          </CardBody>\n        </Card>\n      </Row>\n    </MDBContainer>\n  );\n};\n","import React from \"react\";\nimport \"./activeStyle.css\";\nimport {\n  Navbar,\n  NavbarNav,\n  NavLink,\n  NavbarToggler,\n  NavbarBrand,\n  Collapse,\n  NavItem,\n  Container,\n  Modal,\n  ModalFooter,\n  ModalHeader\n} from \"mdbreact\";\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false,\n      modal: false\n    };\n  }\n  onClick = () => {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  };\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n  render() {\n    return (\n      <Navbar color=\"black\" dark expand=\"lg\">\n        <Container>\n          <Modal\n            className=\"text-black\"\n            size=\"lg\"\n            side\n            position=\"top\"\n            backdrop={true}\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n          >\n            <ModalHeader\n              className=\"text-center\"\n              titleClass=\"w-100\"\n              tag=\"p\"\n              toggle={this.toggle}\n            >\n              Are you sure?\n            </ModalHeader>\n            <ModalFooter className=\"justify-content-center\">\n              <NavLink className=\"btn btn-elegant\" to=\"/\" onClick={this.toggle}>Close</NavLink>\n              <NavLink className=\"btn btn-outline-danger waves-effect\" to=\"/logout\">Log out</NavLink>\n            </ModalFooter>\n          </Modal>\n          <NavbarBrand>\n            <strong className=\"white-text\">Map Application</strong>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.onClick} />\n          <Collapse isOpen={this.state.collapse} navbar>\n            <NavbarNav left>\n              <NavItem>\n                <NavLink exact to=\"/\">\n                  Map itself\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/about\">About</NavLink>\n              </NavItem>\n            </NavbarNav>\n            <NavbarNav right>\n              <NavItem>\n                <NavLink to=\"#!\" onClick={this.toggle}>Logout</NavLink>\n              </NavItem>\n            </NavbarNav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { MDBInput } from \"mdbreact\";\n\nfunction isInvalid({ valid, touched, shouldValidate, value }) {\n  if (value.length <= 0) {\n    return;\n  } else {\n    return !valid && shouldValidate && touched;\n  }\n}\n\nconst Input = props => {\n  const inputType = props.type || \"text\";\n  return (\n    <div>\n      <MDBInput\n        label={props.label}\n        type={inputType}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {isInvalid(props) ? <span>{props.errorMessage}</span> : null}\n    </div>\n  );\n};\n\nexport default Input;\n","export const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\nexport const MAP_ZOOMIN = 'MAP_ZOOMIN'\nexport const MAP_ZOOMOUT = 'MAP_ZOOMOUT'\n\nexport const MARKERS_ON = 'MARKERS_ON'\nexport const MARKERS_OFF = 'MARKERS_OFF'\n\nexport const SET_CENTER = 'SET_CENTER'\n\nexport const CURRENT_MARKERS = 'CURRENT_MARKERS'\n\nexport const LOADED_STATUS = 'LOADED_STATUS'","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"./actionTypes\";\n\nexport function auth(email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n\n    let url =\n      \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBMLU3d72yGqRdNb3GOmqW53m3yjCHBJ7k\";\n\n    if (isLogin) {\n      url =\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBMLU3d72yGqRdNb3GOmqW53m3yjCHBJ7k\";\n    }\n    (async () => {\n      const rawResponse = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(authData)\n      });\n      const data = await rawResponse.json();\n      const expirationDate = new Date(\n        new Date().getTime() + data.expiresIn * 1000\n      );\n      localStorage.setItem(\"token\", data.idToken);\n      localStorage.setItem(\"userId\", data.localId);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n\n      dispatch(authSuccess(data.idToken));\n      dispatch(autoLogout(data.expiresIn));\n    })();\n  };\n}\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\n\nexport function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: AUTH_LOGOUT\n  };\n}\n\nexport function autoLogin() {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000)\n        );\n      }\n    }\n  };\n}\n\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  };\n}\n","import React, { Component } from \"react\";\nimport {\n  MDBBtn,\n  Animation,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport Input from \"../UI/Input/Input\";\nimport is from \"is_js\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../../store/actions/auth\";\n\nclass Auth extends Component {\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"Enter your e-mail\",\n        errorMessage: \"Enter correct e-mail adress (example@mail.com)\",\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: \"\",\n        type: \"password\",\n        label: \"Enter your password\",\n        errorMessage: \"Enter at least 6 characters\",\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  };\n  submitHandler = event => {\n    event.preventDefault();\n  };\n  loginBtn = () => {\n    if (\n      !this.state.formControls.password.valid ||\n      !this.state.formControls.email.valid\n    ) {\n      return;\n    } else {\n      this.props.auth(\n        this.state.formControls.email.value,\n        this.state.formControls.password.value,\n        true\n      );\n    }\n  };\n  registerBtn = () => {\n    if (\n      !this.state.formControls.password.valid ||\n      !this.state.formControls.email.valid\n    ) {\n      return;\n    } else {\n      this.props.auth(\n        this.state.formControls.email.value,\n        this.state.formControls.password.value,\n        false\n      );\n    }\n  };\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n    let isValid = true;\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n    return isValid;\n  }\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.value = event.target.value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validation);\n\n    formControls[controlName] = control;\n\n    let isFormValid = true;\n\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n\n    this.setState({\n      formControls,\n      isFormValid\n    });\n  };\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <Animation type=\"fadeIn\" count={1}>\n        <MDBContainer style={{padding: '20px'}}>\n          <MDBRow>\n            <MDBCol className=\"mt-5\" xl=\"12\">\n              <MDBCard>\n                <MDBCardBody className=\"mx-4\">\n                  <p className=\"h1-responsive text-center mb-4\">Authorization</p>\n                  <form onSubmit={this.submitHandler}>\n                    {this.renderInputs()}\n                    <MDBRow center>\n                      <MDBBtn\n                        onClick={this.loginBtn}\n                        color=\"dark-green\"\n                        size=\"md\"\n                      >\n                        Sign In\n                      </MDBBtn>\n                      <MDBBtn\n                        onClick={this.registerBtn}\n                        color=\"mdb-color\"\n                        size=\"md\"\n                      >\n                        Sign up\n                      </MDBBtn>\n                    </MDBRow>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </Animation>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  };\n}\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Auth);\n","import {\n  MAP_ZOOMIN,\n  MAP_ZOOMOUT,\n  MARKERS_ON,\n  MARKERS_OFF,\n  SET_CENTER,\n  CURRENT_MARKERS,\n  LOADED_STATUS\n} from \"./actionTypes\";\n\nexport function zoomMap(zoomMap) {\n  return dispatch => {\n    if (zoomMap === true) {\n      dispatch(zoomIn());\n    } else {\n      dispatch(zoomOut());\n    }\n  };\n}\nexport function toggleMarkers(toggleMarkers) {\n  return dispatch => {\n    if (toggleMarkers === true) {\n      dispatch(toggleOn());\n    } else {\n      dispatch(toggleOff());\n    }\n  };\n}\nexport function setCenter(center) {\n  return dispatch => {\n    dispatch(currentCenter(center));\n  };\n}\nexport function currentMarkers(markers){\n  return dispatch => {\n    dispatch(setMarkers(markers));\n  }\n}\nexport function loadedMarkersStatus(status){\n  return dispatch =>{\n    dispatch(loadedStatus(status));\n  }\n}\n\nexport function loadedStatus(status){\n  return{\n    type: LOADED_STATUS,\n    status\n  }\n}\nexport function setMarkers(markers){\n  return{\n    type: CURRENT_MARKERS,\n    markers\n  }\n}\nexport function currentCenter(center){\n  return{\n    type: SET_CENTER,\n    center\n  }\n}\nexport function zoomIn() {\n  return {\n    type: MAP_ZOOMIN\n  };\n}\nexport function zoomOut() {\n  return {\n    type: MAP_ZOOMOUT\n  };\n}\nexport function toggleOn() {\n  return {\n    type: MARKERS_ON\n  };\n}\nexport function toggleOff() {\n  return {\n    type: MARKERS_OFF\n  };\n}\n","import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { MDBCol, MDBRow } from \"mdbreact\";\n\nclass Wrapper extends Component {\n  render() {\n    return (\n      <MDBRow>\n        <MDBCol xl=\"12\" style={{height: '100vh', padding: '0px'}}>{this.props.children}</MDBCol>\n      </MDBRow>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDfXMtNQ9WiZVSmJx8FI0EwzFKhyzwM6vg&libraries=places\",\n  language: \"ru\"\n})(Wrapper);\n","import React, { Component } from \"react\";\nimport { Map, Marker, InfoWindow } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport {\n  zoomMap,\n  toggleMarkers,\n  setCenter,\n  currentMarkers,\n  loadedMarkersStatus\n} from \"../../store/actions/map\";\nimport Wrapper from \"../../hoc/MapWrapper/MapWrapper\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBBtn,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBBadge\n} from \"mdbreact\";\nimport \"./Map.css\";\n\nclass MapContainer extends Component {\n  _isMounted = false; //во избежание ошибки leak memory\n  state = {\n    google: \"\", //ссылка на this.props.google ибо карта обернута в еще один hoc и нет возможности достать его обычным путем\n    scrollwheel: false, //запрет на масштабирование колесиком\n    disableDefaultUI: true, // убран стандартный UI\n    currentMarker: [], // текущий маркер\n    markersPosition: [], // массив всех текущих маркеров\n    showingInfoWindow: false, // состояние инфо окна маркера (вкл/выкл)\n    activeMarker: {}, // активный маркер (для триггера инфо окна)\n    selectedPlace: {}, // инфо о выбранном маркере\n    currentUserId: localStorage.getItem(\"userId\"), // текущий id пользователя\n    markersCopy: [], // копия массива с текущими маркерами\n    dataBase: [], // маленькая база данных \n    saveStatus: \"Save Markers\" // статус сохранения\n  };\n  // функция отвечающая за изменения на карте\n  onMapChange = (props, l, c) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n    const keys = {\n      lat: c.latLng.lat(),\n      lng: c.latLng.lng()\n    };\n    const copy = this.state.markersPosition;\n    copy.push(keys);\n    this.setState({\n      markersPosition: copy,\n      markersCopy: copy,\n      currentMarker: keys\n    });\n  };\n  // приближение (redux)\n  zoomInMap = () => {\n    this.props.zoomMap(true);\n  };\n  // отдаление (redux)\n  zoomOutMap = () => {\n    this.props.zoomMap(false);\n  };\n  // информация о маркере\n  onMarkerClick = (props, marker) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n  // установка маркера\n  setMarker() {\n    return Object.keys(this.state.markersPosition).map((pos, index) => {\n      let marker = this.state.markersPosition[pos];\n      return (\n        <Marker\n          onClick={this.onMarkerClick}\n          title={marker.name}\n          position={marker}\n          name={marker.name}\n          key={index}\n          icon={marker.icon}\n        />\n      );\n    });\n  }\n  // вкл/выкл показ маркеров\n  turnOffOn = () => {\n    if (this.props.toggle === false) {\n      this.props.toggleMarkers(true);\n      this.setState({\n        markersPosition: []\n      });\n    } else {\n      this.props.toggleMarkers(false);\n      this.setState({\n        markersPosition: this.state.markersCopy\n      });\n    }\n  };\n  // загрузка маркеров из базы\n  loadMarkers = () => {\n    if (this.props.loaded === false) {\n      for (let item of this.state.dataBase) {\n        if (\n          item.userId === this.state.currentUserId &&\n          item.geo !== this.state.markersPosition\n        ) {\n          let markers = item.geo.concat(this.state.markersPosition);\n          this.setState({\n            markersPosition: markers,\n            markersCopy: markers\n          });\n          this.props.toggleMarkers(false);\n        }\n      }\n    }\n    this.props.loadedMarkersStatus(true);\n  };\n  // сохранение маркеров в локальный state и вызов функции отправки на сервер\n  saveMarkers = () => {\n    let data = this.state.dataBase;\n    if (data.length <= 0) {\n      data.push({\n        userId: this.state.currentUserId,\n        geo: this.state.markersPosition\n      });\n      this.setState({\n        dataBase: data\n      });\n      this.update();\n      return;\n    }\n    if (data.length > 0) {\n      for (let item of data) {\n        if (item.userId === this.state.currentUserId) {\n          item.geo = this.state.markersPosition;\n          this.update();\n          return;\n        }\n      }\n      for (let item2 of data) {\n        if (item2.userId !== this.state.currentUserId) {\n          data.push({\n            userId: this.state.currentUserId,\n            geo: this.state.markersPosition\n          });\n          this.setState({\n            dataBase: data\n          });\n          this.update();\n          return;\n        }\n      }\n    }\n  };\n  // отправка на сервер\n  update() {\n    fetch(\"https://api.jsonbin.io/b/5c2957343f8bd92e4cc5fed1\", {\n      method: \"PUT\",\n      body: JSON.stringify(this.state.dataBase),\n      headers: { \"Content-type\": \"application/json\" }\n    })\n      .then(response => {\n        if (response.status > 200) {\n          this.setState({\n            saveStatus: \"Saving...\"\n          });\n        } else if (response.status === 200) {\n          this.setState({\n            saveStatus: \"Markers Saved\"\n          });\n          setTimeout(() => {\n            this.setState({\n              saveStatus: \"Save Markers\"\n            });\n          }, 1000);\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n  // выбор что отобразить на карте\n  onChooseHandler = event => {\n    if (event.target.value === \"None\" || event.target.value === undefined) {\n      this.setState({\n        markersPosition: \"\"\n      });\n    } else if (event.target.value !== \"\") {\n      const google = this.state.google;\n      const center = this.props.currentCenter;\n      const map = new google.maps.Map(\"\", { center: center });\n      const request = {\n        location: center,\n        radius: \"1000\",\n        type: event.target.value\n      };\n      const requestedData = [];\n      const service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(\n        request,\n        (this.results = res => {\n          for (let item of res) {\n            requestedData.push({\n              lat: item.geometry.location.lat(),\n              lng: item.geometry.location.lng(),\n              name: item.name,\n              rating: item.rating,\n              icon:\n                \"https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Marker-Outside-Chartreuse.png\"\n            });\n          }\n          this.setState({\n            markersPosition: requestedData\n          });\n        })\n      );\n    }\n  };\n  // как только компонент загрузился - загрузить базу\n  componentDidMount() {\n    if (this.state.markersPosition.length <= 0 && this.props.markers !== \"\") {\n      this.setState({\n        markersCopy: this.state.markersPosition.concat(this.props.markers)\n      });\n      if (this.props.toggle === false) {\n        this.setState({\n          markersPosition: this.state.markersPosition.concat(this.props.markers)\n        });\n      }\n    }\n    this._isMounted = true;\n    fetch(\"https://api.jsonbin.io/b/5c2957343f8bd92e4cc5fed1/latest\", {\n      method: \"GET\",\n      headers: { \"Content-type\": \"application/json\" }\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (this._isMounted) {\n          this.setState({\n            dataBase: data\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    this.setMarker();\n  }\n  // сохранение маркеров в redux и переключение флага\n  componentWillUnmount() {\n    this.props.currentMarkers(this.state.markersCopy);\n    this._isMounted = false;\n  }\n  // отслеживание центра карты для точного отображения выбранных объектов\n  centerMoved = (mapProps, map) => {\n    const lat = map.center.lat();\n    const lng = map.center.lng();\n    const mapCenter = { lat: lat, lng: lng };\n    this.props.setCenter(mapCenter);\n  };\n  render() {\n    return (\n      <MDBContainer fluid style={{ padding: \"0px\" }}>\n        <MDBContainer\n          fluid\n          style={{ position: \"absolute\", zIndex: \"100\", padding: \"0px\" }}\n        >\n          <MDBRow center className=\"w-100\">\n            <MDBBtn color=\"mdb-color\" onClick={this.zoomInMap}>\n              ZoomIn\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.zoomOutMap}>\n              ZoomOut\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.turnOffOn}>\n              {this.props.toggle === false\n                ? \"Turn Off Markers\"\n                : \"Turn On Markers\"}\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.loadMarkers}>\n              {this.props.loaded === false ? \"Load Markers\" : \"Loaded\"}\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.saveMarkers}>\n              {this.state.saveStatus}\n              <MDBBadge\n                color=\"info\"\n                pill\n                style={{ marginLeft: \"5px\", marginBottom: \"5px\" }}\n              >\n                {this.state.markersPosition.length}\n              </MDBBadge>\n            </MDBBtn>\n            <MDBDropdown\n              style={{ display: \"inline-flex\" }}\n              onClick={this.onChooseHandler}\n            >\n              <MDBDropdownToggle\n                caret\n                color=\"mdb-color\"\n                defaultValue={this.state.currentSelected}\n              >\n                Select type\n              </MDBDropdownToggle>\n              <MDBDropdownMenu>\n                <MDBDropdownItem value=\"None\">None</MDBDropdownItem>\n                <MDBDropdownItem value=\"gas_station\">\n                  Gas stations\n                </MDBDropdownItem>\n                <MDBDropdownItem value=\"pharmacy\">Pharmacies</MDBDropdownItem>\n                <MDBDropdownItem value=\"school\">Schools</MDBDropdownItem>\n                <MDBDropdownItem value=\"restaurant\">\n                  Restaurants\n                </MDBDropdownItem>\n              </MDBDropdownMenu>\n            </MDBDropdown>\n          </MDBRow>\n        </MDBContainer>\n        <Wrapper>\n          <Map\n            onDragend={this.centerMoved}\n            disableDoubleClickZoom={true}\n            scrollwheel={false}\n            zoomControl={false}\n            scaleControl={false}\n            gestureHandling={\"greedy\"}\n            onReady={props =>\n              this.setState({\n                google: props.google\n              })\n            }\n            google={window.google}\n            zoom={this.props.zoom}\n            className={\"map\"}\n            initialCenter={this.props.currentCenter}\n            disableDefaultUI={true}\n            onClick={this.onMapChange}\n          >\n            {this.setMarker(this.props.markers)}\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n            >\n              <div>\n                <h1>{this.state.selectedPlace.name}</h1>\n              </div>\n            </InfoWindow>\n          </Map>\n        </Wrapper>\n      </MDBContainer>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    zoomMap: zoom => dispatch(zoomMap(zoom)),\n    toggleMarkers: toggle => dispatch(toggleMarkers(toggle)),\n    setCenter: center => dispatch(setCenter(center)),\n    currentMarkers: markers => dispatch(currentMarkers(markers)),\n    loadedMarkersStatus: loaded => dispatch(loadedMarkersStatus(loaded))\n  };\n}\nfunction mapStateToProps(state) {\n  return {\n    zoom: state.zoom.zoom,\n    toggle: state.toggle.toggleMarkers,\n    currentCenter: state.center.center,\n    markers: state.markers.markers,\n    loaded: state.loaded.loaded,\n    loadStatus: state.loaded.loadStatus\n  };\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MapContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { logout } from \"../../store/actions/auth\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return <Redirect to={\"/\"} />;\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout())\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Logout);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { About } from \"./Components/About/About\";\nimport Nav from \"./Components/Navigation/Nav\";\nimport Auth from \"./Components/Authorization/Auth\";\nimport MapContainer from \"./Components/Map/Map\";\nimport { connect } from \"react-redux\";\nimport Logout from \"./Components/Logout/Logout\";\nimport { autoLogin } from \"./store/actions/auth\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  }\n\n  render() {\n    let nav;\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact component={MapContainer} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n      nav = (<Nav/>);\n    }\n    return (\n      <Layout>\n        { nav }\n        {routes}\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null\n};\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.token\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null\n      };\n    default:\n      return state;\n  }\n}\n","import {MAP_ZOOMIN, MAP_ZOOMOUT} from '../actions/actionTypes'\n\nconst initialState = {\n    zoom: 15\n}\nexport default function zoomReducer(state = initialState, action) {\n    switch (action.type) {\n      case MAP_ZOOMIN:\n        return {\n          ...state,\n          zoom: state.zoom + 1\n        };\n      case MAP_ZOOMOUT:\n        return {\n          ...state,\n          zoom: state.zoom - 1\n        };\n      default:\n        return state;\n    }\n  }","import { MARKERS_ON, MARKERS_OFF } from \"../actions/actionTypes\";\n\nconst initialState = {\n  toggleMarkers: false\n};\nexport default function toggleReducer(state = initialState, action) {\n  switch (action.type) {\n    case MARKERS_ON:\n      return {\n        ...state,\n        toggleMarkers: true\n      };\n    case MARKERS_OFF:\n      return {\n        ...state,\n        toggleMarkers: false\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CENTER} from \"../actions/actionTypes\";\n\nconst initialState = {\n  center: { lat: 46.482753, lng: 30.735552 }\n};\nexport default function centerReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_CENTER:\n      return {\n        ...state,\n        center: action.center\n      };\n    default:\n      return state;\n  }\n}","import { CURRENT_MARKERS } from \"../actions/actionTypes\";\n\nconst initialState = {\n  markers: \"\"\n};\nexport default function markersReducer(state = initialState, action) {\n  switch (action.type) {\n    case CURRENT_MARKERS:\n      return {\n        ...state,\n        markers: action.markers\n      };\n    default:\n      return state;\n  }\n}","import { LOADED_STATUS} from \"../actions/actionTypes\";\n\nconst initialState = {\n  loaded: false,\n  loadStatus: 'Load Markers'\n};\nexport default function loadedReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADED_STATUS:\n      return {\n        ...state,\n        loaded: action.status,\n        loadStatus: 'Loaded'\n      };\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux'\nimport authReducer from './auth'\nimport zoomReducer from './zoom'\nimport toggleReducer from './toggle'\nimport centerReducer from './center'\nimport markersReducer from './markers'\nimport loadedReducer from './loadedStatus'\n\nexport default combineReducers({\n    auth: authReducer,\n    zoom: zoomReducer,\n    toggle: toggleReducer,\n    center: centerReducer,\n    markers: markersReducer,\n    loaded: loadedReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n    rootReducer, \n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\nconst application = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\nReactDOM.render(application, document.getElementById('root'));\n"],"sourceRoot":""}
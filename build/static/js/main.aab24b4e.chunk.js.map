{"version":3,"sources":["hoc/Layout/Layout.js","Components/About/About.js","Components/Navigation/Nav.js","Components/UI/Input/Input.js","store/actions/actionTypes.js","store/actions/auth.js","Components/Authorization/Auth.js","store/actions/map.js","hoc/MapWrapper/MapWrapper.js","Components/Map/Panel.js","Components/Map/InfoDrawer.js","Components/Map/Map.js","Components/Logout/Logout.js","App.js","store/reducers/auth.js","store/reducers/map.js","store/reducers/rootReducer.js","index.js"],"names":["Layout","react_default","a","createElement","this","props","children","Component","About","mdbreact","fluid","className","style","height","alignItems","center","Nav","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClick","setState","collapse","state","toggle","modal","isWideEnough","color","dark","expand","size","side","position","backdrop","isOpen","titleClass","tag","to","navbar","left","exact","right","React","Input","inputType","type","label","value","onChange","_ref","valid","touched","shouldValidate","length","isInvalid","errorMessage","AUTH_SUCCESS","AUTH_LOGOUT","MAP_ZOOMIN","MAP_ZOOMOUT","TOGGLE_MARKERS","SET_CENTER","CURRENT_MARKERS","LOADED_STATUS","DATABASE","GOOGLE","autoLogout","time","dispatch","setTimeout","logout","localStorage","removeItem","authSuccess","token","Auth","isFormValid","formControls","email","validation","required","password","minLength","submitHandler","event","preventDefault","loginBtn","auth","registerBtn","onChangeHandler","controlName","objectSpread","control","target","validateControl","keys","forEach","name","isValid","trim","is","_this2","map","index","UI_Input_Input","key","count","padding","xl","onSubmit","renderInputs","connect","isLogin","asyncToGenerator","regenerator_default","mark","_callee2","authData","url","wrap","_context2","prev","next","returnSecureToken","_callee","rawResponse","data","expirationDate","_context","fetch","method","body","JSON","stringify","sent","json","Date","getTime","expiresIn","setItem","idToken","localId","stop","_x","apply","arguments","setDatabase","toggleMarkers","currentMarkers","markers","loadedStatus","status","zoomMap","zoom","Wrapper","GoogleApiWrapper","apiKey","language","Panel","currentUserId","getItem","saveStatus","turnOffOn","loadMarkers","loaded","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","dataBase","Symbol","iterator","done","item","userId","geo","concat","err","return","saveMarkers","push","userName","update","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onChooseHandler","arr","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","google","currentCenter","maps","Map","request","location","radius","requestedData","places","PlacesService","nearbySearch","results","res","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","lat","geometry","lng","rating","icon","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","headers","Content-type","then","response","catch","error","console","log","_this3","zIndex","pill","marginLeft","marginBottom","display","caret","InfoDrawer","renamePlace","disableInput","renameMarkerIndex","nameValue","nameChange","currentMarker","toggleInfo","toggleRenameMarker","handleInput","e","renameMarker","copy","assign","deleteMarker","marker","splice","filter","lightMarker","renderMarkers","pos","inputName","changeName","toggleInputName","burnThemAll","gradient","onInput","copyMarkers","MapContainer","_isMounted","scrollwheel","dataBaseLoaded","disableDefaultUI","markersPosition","showingInfoWindow","activeMarker","selectedPlace","onMapChange","l","c","latLng","onMarkerClick","centerMoved","mapProps","mapCenter","setCenter","dist","title","base","setMarker","_this4","Map_Panel","MapWrapper","onDragend","disableDoubleClickZoom","zoomControl","scaleControl","gestureHandling","onReady","setGoogleObject","window","initialCenter","visible","Map_InfoDrawer","Logout","Redirect","App","autoLogin","nav","routes","Switch","Route","path","component","isAuthenticated","Navigation_Nav","hoc_Layout_Layout","withRouter","initialState","loadStatus","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","application","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aab24b4e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Layout.css';\r\nclass Layout extends Component {\r\n    render(){\r\n        return (\r\n            <header>\r\n                { this.props.children }\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport { MDBContainer, Card, CardBody, CardTitle, Row } from \"mdbreact\";\r\nimport \"./About.css\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <MDBContainer fluid className=\"about-container\">\r\n      <Row style={{ height: \"100vh\", alignItems: \"center\" }} center>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle className=\"display-4 text-align-center\">My React first application</CardTitle>\r\n            <p className=\"h2-responsive\">\r\n              This small application was built in a week.\r\n            </p>\r\n            <p className=\"h3-responsive\">Started on</p>\r\n            <p className=\"h4-responsive\">19/11/2018</p>\r\n            <p className=\"h5-responsive\">Ended on</p>\r\n            <p className=\"h4-responsive\">26/11/2018</p>\r\n            <p className=\"h5-responsive\">Updated on 07/12/2018</p>\r\n            <p className=\"h5-responsive\">Second update on 30/12/2018 (small one)</p>\r\n            <p className=\"h5-responsive\">P.S: This is my first App ( ͡° ͜ʖ ͡°)</p>\r\n          </CardBody>\r\n        </Card>\r\n      </Row>\r\n    </MDBContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./activeStyle.css\";\r\nimport {\r\n  Navbar,\r\n  NavbarNav,\r\n  NavLink,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Collapse,\r\n  NavItem,\r\n  Container,\r\n  Modal,\r\n  ModalFooter,\r\n  ModalHeader\r\n} from \"mdbreact\";\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false,\r\n      modal: false\r\n    };\r\n  }\r\n  onClick = () => {\r\n    this.setState({\r\n      collapse: !this.state.collapse\r\n    });\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar color=\"black\" dark expand=\"lg\">\r\n        <Container>\r\n          <Modal\r\n            className=\"text-black\"\r\n            size=\"lg\"\r\n            side\r\n            position=\"top\"\r\n            backdrop={true}\r\n            isOpen={this.state.modal}\r\n            toggle={this.toggle}\r\n          >\r\n            <ModalHeader\r\n              className=\"text-center\"\r\n              titleClass=\"w-100\"\r\n              tag=\"p\"\r\n              toggle={this.toggle}\r\n            >\r\n              Are you sure?\r\n            </ModalHeader>\r\n            <ModalFooter className=\"justify-content-center\">\r\n              <NavLink className=\"btn btn-elegant\" to=\"/\" onClick={this.toggle}>Close</NavLink>\r\n              <NavLink className=\"btn btn-outline-danger waves-effect\" to=\"/logout\">Log out</NavLink>\r\n            </ModalFooter>\r\n          </Modal>\r\n          <NavbarBrand>\r\n            <strong className=\"white-text\">Map Application</strong>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.onClick} />\r\n          <Collapse isOpen={this.state.collapse} navbar>\r\n            <NavbarNav left>\r\n              <NavItem>\r\n                <NavLink exact to=\"/\">\r\n                  Map itself\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/about\">About</NavLink>\r\n              </NavItem>\r\n            </NavbarNav>\r\n            <NavbarNav right>\r\n              <NavItem>\r\n                <NavLink to=\"#!\" onClick={this.toggle}>Logout</NavLink>\r\n              </NavItem>\r\n            </NavbarNav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nfunction isInvalid({ valid, touched, shouldValidate, value }) {\r\n  if (value.length <= 0) {\r\n    return;\r\n  } else {\r\n    return !valid && shouldValidate && touched;\r\n  }\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || \"text\";\r\n  return (\r\n    <div>\r\n      <MDBInput\r\n        label={props.label}\r\n        type={inputType}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      {isInvalid(props) ? <span>{props.errorMessage}</span> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\nexport const MAP_ZOOMIN = 'MAP_ZOOMIN'\r\nexport const MAP_ZOOMOUT = 'MAP_ZOOMOUT'\r\n\r\nexport const TOGGLE_MARKERS = 'TOGGLE_MARKERS'\r\n\r\nexport const SET_CENTER = 'SET_CENTER'\r\n\r\nexport const CURRENT_MARKERS = 'CURRENT_MARKERS'\r\n\r\nexport const LOADED_STATUS = 'LOADED_STATUS'\r\n\r\nexport const DATABASE = 'DATABASE'\r\n\r\nexport const GOOGLE = 'GOOGLE'\r\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    };\r\n\r\n    let url =\r\n      \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBMLU3d72yGqRdNb3GOmqW53m3yjCHBJ7k\";\r\n\r\n    if (isLogin) {\r\n      url =\r\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBMLU3d72yGqRdNb3GOmqW53m3yjCHBJ7k\";\r\n    }\r\n    (async () => {\r\n      const rawResponse = await fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(authData)\r\n      });\r\n      const data = await rawResponse.json();\r\n      const expirationDate = new Date(\r\n        new Date().getTime() + data.expiresIn * 1000\r\n      );\r\n      localStorage.setItem(\"token\", data.idToken);\r\n      localStorage.setItem(\"userId\", data.localId);\r\n      localStorage.setItem(\"expirationDate\", expirationDate);\r\n\r\n      dispatch(authSuccess(data.idToken));\r\n      dispatch(autoLogout(data.expiresIn));\r\n    })();\r\n  };\r\n}\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, time * 1000);\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  };\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(token));\r\n        dispatch(\r\n          autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000)\r\n        );\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  Animation,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardBody\r\n} from \"mdbreact\";\r\nimport Input from \"../UI/Input/Input\";\r\nimport is from \"is_js\";\r\nimport { connect } from \"react-redux\";\r\nimport { auth } from \"../../store/actions/auth\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: \"\",\r\n        type: \"email\",\r\n        label: \"Enter your e-mail\",\r\n        errorMessage: \"Enter correct e-mail adress (example@mail.com)\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        type: \"password\",\r\n        label: \"Enter your password\",\r\n        errorMessage: \"Enter at least 6 characters\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  };\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n  };\r\n  loginBtn = () => {\r\n    if (\r\n      !this.state.formControls.password.valid ||\r\n      !this.state.formControls.email.valid\r\n    ) {\r\n      return;\r\n    } else {\r\n      this.props.auth(\r\n        this.state.formControls.email.value,\r\n        this.state.formControls.password.value,\r\n        true\r\n      );\r\n    }\r\n  };\r\n  registerBtn = () => {\r\n    if (\r\n      !this.state.formControls.password.valid ||\r\n      !this.state.formControls.email.valid\r\n    ) {\r\n      return;\r\n    } else {\r\n      this.props.auth(\r\n        this.state.formControls.email.value,\r\n        this.state.formControls.password.value,\r\n        false\r\n      );\r\n    }\r\n  };\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n    let isValid = true;\r\n    if (validation.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid;\r\n    }\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid;\r\n    });\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid\r\n    });\r\n  };\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Animation type=\"fadeIn\" count={1}>\r\n        <MDBContainer style={{padding: '20px'}}>\r\n          <MDBRow>\r\n            <MDBCol className=\"mt-5\" xl=\"12\">\r\n              <MDBCard>\r\n                <MDBCardBody className=\"mx-4\">\r\n                  <p className=\"h1-responsive text-center mb-4\">Authorization</p>\r\n                  <form onSubmit={this.submitHandler}>\r\n                    {this.renderInputs()}\r\n                    <MDBRow center>\r\n                      <MDBBtn\r\n                        onClick={this.loginBtn}\r\n                        color=\"dark-green\"\r\n                        size=\"md\"\r\n                      >\r\n                        Sign In\r\n                      </MDBBtn>\r\n                      <MDBBtn\r\n                        onClick={this.registerBtn}\r\n                        color=\"mdb-color\"\r\n                        size=\"md\"\r\n                      >\r\n                        Sign up\r\n                      </MDBBtn>\r\n                    </MDBRow>\r\n                  </form>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </Animation>\r\n    );\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  };\r\n}\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Auth);\r\n","import {\r\n    MAP_ZOOMIN,\r\n    MAP_ZOOMOUT,\r\n    SET_CENTER,\r\n    CURRENT_MARKERS,\r\n    LOADED_STATUS,\r\n    TOGGLE_MARKERS,\r\n    DATABASE,\r\n    GOOGLE\r\n} from \"./actionTypes\";\r\n\r\nexport function setGoogleObject(data) {\r\n    return {\r\n        type: GOOGLE,\r\n        data\r\n    }\r\n}\r\n\r\nexport function setDatabase(data) {\r\n    return{\r\n        type: DATABASE,\r\n        data\r\n    }\r\n}\r\n\r\nexport function setCenter(center) {\r\n    return {\r\n        type: SET_CENTER,\r\n        center\r\n    };\r\n}\r\n\r\nexport function toggleMarkers(toggle) {\r\n    return {\r\n        type: TOGGLE_MARKERS,\r\n        toggle\r\n    };\r\n}\r\n\r\nexport function currentMarkers(markers) {\r\n    return {\r\n        type: CURRENT_MARKERS,\r\n        markers\r\n    };\r\n}\r\n\r\nexport function loadedStatus(status) {\r\n    return {\r\n        type: LOADED_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport function zoomMap(zoom) {\r\n    return dispatch => {\r\n        if (zoom === true) {\r\n            dispatch(zoomIn());\r\n        } else {\r\n            dispatch(zoomOut());\r\n        }\r\n    };\r\n}\r\n\r\nexport function zoomIn() {\r\n    return {\r\n        type: MAP_ZOOMIN\r\n    };\r\n}\r\n\r\nexport function zoomOut() {\r\n    return {\r\n        type: MAP_ZOOMOUT\r\n    };\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { GoogleApiWrapper } from \"google-maps-react\";\r\nimport { MDBCol, MDBRow } from \"mdbreact\";\r\n\r\nclass Wrapper extends Component {\r\n  render() {\r\n    return (\r\n      <MDBRow>\r\n        <MDBCol xl=\"12\" style={{height: '100vh', padding: '0px'}}>{this.props.children}</MDBCol>\r\n      </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDfXMtNQ9WiZVSmJx8FI0EwzFKhyzwM6vg&libraries=places\",\r\n  language: \"ru\"\r\n})(Wrapper);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    zoomMap,\r\n    toggleMarkers,\r\n    currentMarkers,\r\n    loadedStatus,\r\n    setDatabase\r\n} from \"../../store/actions/map\";\r\nimport {\r\n    MDBBadge,\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBDropdown,\r\n    MDBDropdownItem,\r\n    MDBDropdownMenu,\r\n    MDBDropdownToggle,\r\n    MDBRow\r\n} from \"mdbreact\";\r\n\r\nclass Panel extends Component {\r\n    state = {\r\n        currentUserId: localStorage.getItem(\"userId\"), // текущий id пользователя\r\n        saveStatus: \"Save Markers\" // статус сохранения\r\n    };\r\n\r\n    // вкл/выкл показ маркеров\r\n    turnOffOn = () => {\r\n        if (this.props.toggle === false) {\r\n            this.props.toggleMarkers(true);\r\n        } else {\r\n            this.props.toggleMarkers(false);\r\n        }\r\n    };\r\n    // загрузка маркеров из базы\r\n    loadMarkers = () => {\r\n        if (this.props.loaded === false) {\r\n            for (let item of this.props.dataBase) {\r\n                if (\r\n                    item.userId === this.state.currentUserId &&\r\n                    item.geo !== this.props.markers\r\n                ) {\r\n                    let markers = item.geo.concat(this.props.markers);\r\n                    this.props.currentMarkers(markers);\r\n                    this.props.toggleMarkers(false);\r\n                }\r\n            }\r\n        }\r\n        this.props.loadedStatus(true);\r\n    };\r\n    // сохранение маркеров в локальный state и вызов функции отправки на сервер\r\n    saveMarkers = () => {\r\n        let data = this.props.dataBase;\r\n        if (data.length <= 0) {\r\n            data.push({\r\n                userId: this.state.currentUserId,\r\n                geo: this.props.markers,\r\n                userName: 'UserName'\r\n            });\r\n            this.props.setDatabase(data);\r\n            this.update();\r\n            return;\r\n        }\r\n        if (data.length > 0) {\r\n            for (let item of data) {\r\n                if (item.userId === this.state.currentUserId) {\r\n                    item.geo = this.props.markers;\r\n                    this.update();\r\n                    return;\r\n                }\r\n            }\r\n            for (let item2 of data) {\r\n                if (item2.userId !== this.state.currentUserId) {\r\n                    data.push({\r\n                        userId: this.state.currentUserId,\r\n                        geo: this.props.markers\r\n                    });\r\n                    this.props.setDatabase(data);\r\n                    this.update();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // отправка на сервер\r\n    update() {\r\n        fetch(\"https://api.jsonbin.io/b/5c2957343f8bd92e4cc5fed1\", {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(this.props.dataBase),\r\n            headers: {\"Content-type\": \"application/json\"}\r\n        })\r\n            .then(response => {\r\n                if (response.status > 200) {\r\n                    this.setState({\r\n                        saveStatus: \"Saving...\"\r\n                    });\r\n                } else if (response.status === 200) {\r\n                    this.setState({\r\n                        saveStatus: \"Markers Saved\"\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            saveStatus: \"Save Markers\"\r\n                        });\r\n                    }, 1000);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // выбор что отобразить на карте\r\n    onChooseHandler = event => {\r\n        let arr = [];\r\n        if (event.target.value === \"None\" || event.target.value === undefined) {\r\n            for (let item of this.props.markers) {\r\n                if (item.type) {\r\n                    arr.push(item);\r\n                }\r\n            }\r\n            this.props.currentMarkers(arr);\r\n        } else if (event.target.value !== \"\") {\r\n            const google = this.props.google;\r\n            const center = this.props.currentCenter;\r\n            const map = new google.maps.Map(\"\", {center: center});\r\n            const request = {\r\n                location: center,\r\n                radius: \"1000\",\r\n                type: event.target.value\r\n            };\r\n            const requestedData = [];\r\n            const service = new google.maps.places.PlacesService(map);\r\n            service.nearbySearch(\r\n                request,\r\n                (this.results = res => {\r\n                    for (let item of res) {\r\n                        requestedData.push({\r\n                            lat: item.geometry.location.lat(),\r\n                            lng: item.geometry.location.lng(),\r\n                            name: item.name,\r\n                            rating: item.rating,\r\n                            icon:\r\n                                \"https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Marker-Outside-Chartreuse.png\"\r\n                        });\r\n                    }\r\n                    for (let item of this.props.markers) {\r\n                        if (item.type) {\r\n                            arr.push(item);\r\n                        }\r\n                    }\r\n                    arr = arr.concat(requestedData);\r\n                    this.props.currentMarkers(arr);\r\n                })\r\n            );\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <MDBContainer\r\n                fluid\r\n                style={{position: \"absolute\", zIndex: \"100\", padding: \"0px\"}}\r\n            >\r\n                <MDBRow center className=\"w-100\">\r\n                    <MDBBtn color=\"mdb-color\" onClick={() => this.props.zoomMap(true)}>\r\n                        ZoomIn\r\n                    </MDBBtn>\r\n                    <MDBBtn color=\"mdb-color\" onClick={() => this.props.zoomMap(false)}>\r\n                        ZoomOut\r\n                    </MDBBtn>\r\n                    <MDBBtn color=\"mdb-color\" onClick={this.turnOffOn}>\r\n                        {this.props.toggle === false\r\n                            ? \"Turn Off Markers\"\r\n                            : \"Turn On Markers\"}\r\n                    </MDBBtn>\r\n                    <MDBBtn color=\"mdb-color\" onClick={this.loadMarkers}>\r\n                        {this.props.loaded === false ? \"Load Markers\" : \"Loaded\"}\r\n                    </MDBBtn>\r\n                    <MDBBtn color=\"mdb-color\" onClick={this.saveMarkers}>\r\n                        {this.state.saveStatus}\r\n                        <MDBBadge\r\n                            color=\"info\"\r\n                            pill\r\n                            style={{marginLeft: \"5px\", marginBottom: \"5px\"}}\r\n                        >\r\n                            {this.props.markers.length}\r\n                        </MDBBadge>\r\n                    </MDBBtn>\r\n                    <MDBDropdown\r\n                        style={{display: \"inline-flex\"}}\r\n                        onClick={this.onChooseHandler}\r\n                    >\r\n                        <MDBDropdownToggle\r\n                            caret\r\n                            color=\"mdb-color\"\r\n                        >\r\n                            Select type\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu>\r\n                            <MDBDropdownItem value=\"None\">None</MDBDropdownItem>\r\n                            <MDBDropdownItem value=\"gas_station\">\r\n                                Gas stations\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem value=\"pharmacy\">Pharmacies</MDBDropdownItem>\r\n                            <MDBDropdownItem value=\"school\">Schools</MDBDropdownItem>\r\n                            <MDBDropdownItem value=\"restaurant\">\r\n                                Restaurants\r\n                            </MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        zoomMap: zoom => dispatch(zoomMap(zoom)),\r\n        toggleMarkers: toggle => dispatch(toggleMarkers(toggle)),\r\n        currentMarkers: markers => dispatch(currentMarkers(markers)),\r\n        loadedStatus: loaded => dispatch(loadedStatus(loaded)),\r\n        setDatabase: data => dispatch(setDatabase(data))\r\n    };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        toggle: state.map.toggleMarkers,\r\n        currentCenter: state.map.center,\r\n        markers: state.map.markers,\r\n        loaded: state.map.loaded,\r\n        dataBase: state.map.dataBase,\r\n        google: state.map.google\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Panel);\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    MDBIcon,\r\n    MDBInput,\r\n    MDBListGroup,\r\n    MDBListGroupItem,\r\n    MDBBtn\r\n} from \"mdbreact\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    currentMarkers,\r\n    loadedStatus\r\n} from \"../../store/actions/map\";\r\n\r\nclass InfoDrawer extends Component {\r\n    state = {\r\n        toggle: false,\r\n        update: false,\r\n        renamePlace: '',\r\n        disableInput: true,\r\n        renameMarkerIndex: 0,\r\n        nameValue: '',\r\n        nameChange: false,\r\n        currentMarker: {},\r\n        error: false\r\n    };\r\n    toggleInfo = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        });\r\n    };\r\n    toggleRenameMarker = index => {\r\n        this.setState({\r\n            disableInput: false,\r\n            renamePlace: this.props.markers[index].name,\r\n            renameMarkerIndex: index\r\n        });\r\n    };\r\n    handleInput = e => {\r\n        this.setState({\r\n            renamePlace: e.target.value\r\n        })\r\n    };\r\n    renameMarker = (e) => {\r\n        const copy = this.props.markers;\r\n        Object.assign(copy[this.state.renameMarkerIndex], {\r\n            name: this.state.renamePlace\r\n        });\r\n        this.props.currentMarkers(copy.map((item) => item));\r\n        this.setState({\r\n            disableInput: true,\r\n            renamePlace: '',\r\n            renameMarkerIndex: 0\r\n        })\r\n    };\r\n    deleteMarker = (index) => {\r\n        let copy = this.props.markers;\r\n        let marker = copy.splice(index, 1);\r\n        this.props.currentMarkers(copy.filter((item) => item !== marker));\r\n    };\r\n    lightMarker = (marker, index) => {\r\n        for (let item of this.props.markers) {\r\n            if (item.icon && item.type) {\r\n                delete item.icon;\r\n            }\r\n            if (!item.type) {\r\n                item.icon = 'https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Marker-Outside-Chartreuse.png';\r\n            }\r\n        }\r\n        const copy = this.props.markers;\r\n        if (copy[index] === this.state.currentMarker) {\r\n            this.setState({\r\n                currentMarker: {}\r\n            });\r\n            if (!copy[index].type) {\r\n                copy[index].icon = 'https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Marker-Outside-Chartreuse.png';\r\n            } else {\r\n                delete copy[index].icon;\r\n            }\r\n            return this.props.currentMarkers(copy.map((item) => item));\r\n        }\r\n        Object.assign(copy[index], {\r\n            icon: 'https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/64/Map-Marker-Marker-Outside-Pink.png'\r\n        });\r\n        this.setState({\r\n            currentMarker: copy[index]\r\n        });\r\n        this.props.currentMarkers(copy.map((item) => item));\r\n    };\r\n    renderMarkers = () => {\r\n        const markers = this.props.markers;\r\n        return Object.keys(markers).map((pos, index) => {\r\n            let marker = markers[pos];\r\n            if (markers.length > 0) {\r\n                return (\r\n                    <MDBListGroupItem\r\n                        className={this.state.currentMarker === marker ? 'list-item chosen-item' : 'list-item'}\r\n                        key={index}>\r\n                        <p onClick={() => this.lightMarker(marker, index)}>{marker.name}</p>\r\n                        <div>\r\n                            {marker.type ? <MDBIcon className={'icon'} onClick={() => this.toggleRenameMarker(index)}\r\n                                                    icon=\"edit\"/> : false}\r\n                            <MDBIcon className={'icon'} onClick={() => this.deleteMarker(index)} icon=\"trash\"/>\r\n                        </div>\r\n                    </MDBListGroupItem>\r\n                );\r\n            }\r\n        });\r\n    };\r\n    userName = () => {\r\n        for (let item of this.props.dataBase) {\r\n            if (item.userId === localStorage.getItem(\"userId\")) {\r\n                return item.userName\r\n            }\r\n        }\r\n        return 'UserName';\r\n    };\r\n    inputName = e => {\r\n        this.setState({\r\n            nameValue: e.target.value\r\n        })\r\n    };\r\n    changeName = () => {\r\n        for (let item of this.props.dataBase) {\r\n            if (item.userId === localStorage.getItem(\"userId\")) {\r\n                item.userName = this.state.nameValue;\r\n                this.setState({\r\n                    nameValue: '',\r\n                    nameChange: false\r\n                })\r\n            }\r\n        }\r\n    };\r\n    toggleInputName = () => {\r\n        for (let item of this.props.dataBase) {\r\n            if (item.userId === localStorage.getItem(\"userId\")) {\r\n                return this.setState({\r\n                    nameChange: true,\r\n                    nameValue: item.userName,\r\n                    error: false\r\n                })\r\n            }\r\n        }\r\n        return this.setState({\r\n            error: true\r\n        })\r\n    };\r\n    burnThemAll = () => {\r\n        this.props.currentMarkers([]);\r\n        this.props.loadedStatus(false);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.toggle ? 'user-info' : 'user-info closed'}>\r\n                <MDBBtn size=\"sm\" gradient=\"blue\" className={'open-close-info'} onClick={this.toggleInfo}>\r\n                    {!this.state.toggle ? 'Open Info' : 'Close Info'}</MDBBtn>\r\n                <div className={'user-info-wrapper'}>\r\n                    <div>\r\n                        <div className={'account-name'}>Account Name: {this.userName()} <MDBIcon\r\n                            onClick={this.toggleInputName}\r\n                            icon=\"edit\"/></div>\r\n                        {this.state.error ? <p>You must save markers first</p> : false}\r\n                        {this.state.nameChange ?\r\n                            <div className={'input-block'}>\r\n                                <MDBInput\r\n                                    label='Account Name'\r\n                                    value={this.state.nameValue}\r\n                                    onInput={this.inputName}/>\r\n                                <button className={'icon-btn'}>\r\n                                    <MDBIcon onClick={this.changeName}\r\n                                             icon=\"check\"/>\r\n                                </button>\r\n                            </div> : false\r\n                        }\r\n                        {!this.state.disableInput ?\r\n                            <div className={'input-block'}>\r\n                                <MDBInput label='Marker Name' value={this.state.renamePlace}\r\n                                          onInput={this.handleInput}/>\r\n                                <button className={'icon-btn'}>\r\n                                    <MDBIcon onClick={this.renameMarker} icon=\"check\"/>\r\n                                </button>\r\n                            </div> : false\r\n                        }\r\n                    </div>\r\n                    <div className={'user-items-block'}>\r\n                        {this.props.markers.length > 0 ?\r\n                            <div>\r\n                                <MDBListGroup className='user-list scrollbar scrollbar-black bordered-black square'>\r\n                                    {this.renderMarkers()}\r\n                                </MDBListGroup>\r\n                                <MDBBtn className={'delete-btn'} onClick={this.burnThemAll} color=\"danger\" size=\"sm\">Delete\r\n                                    all\r\n                                    markers</MDBBtn>\r\n                            </div> :\r\n                            <p className='user-list'>There's no markers yet</p>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        currentMarkers: markers => dispatch(currentMarkers(markers)),\r\n        loadedStatus: (status) => dispatch(loadedStatus(status))\r\n    };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        zoom: state.map.zoom,\r\n        toggle: state.map.toggleMarkers,\r\n        currentCenter: state.map.center,\r\n        markers: state.map.markers,\r\n        copyMarkers: state.map.copyMarkers,\r\n        dataBase: state.map.dataBase\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InfoDrawer)\r\n","import React, {Component} from \"react\";\r\nimport {Map, Marker, InfoWindow} from \"google-maps-react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setCenter,\r\n    toggleMarkers,\r\n    currentMarkers,\r\n    setDatabase,\r\n    setGoogleObject\r\n} from \"../../store/actions/map\";\r\nimport Wrapper from \"../../hoc/MapWrapper/MapWrapper\";\r\nimport Panel from \"./Panel\";\r\nimport InfoDrawer from \"./InfoDrawer\"\r\nimport {\r\n    MDBContainer\r\n} from \"mdbreact\";\r\nimport \"./Map.css\";\r\n\r\nclass MapContainer extends Component {\r\n    _isMounted = false; //во избежание ошибки leak memory\r\n    state = {\r\n        scrollwheel: false, //запрет на масштабирование колесиком\r\n        dataBaseLoaded: false,\r\n        disableDefaultUI: true, // убран стандартный UI\r\n        markersPosition: [], // массив всех текущих маркеров\r\n        showingInfoWindow: false, // состояние инфо окна маркера (вкл/выкл)\r\n        activeMarker: {}, // активный маркер (для триггера инфо окна)\r\n        selectedPlace: {} // инфо о выбранном маркере\r\n    };\r\n    // функция отвечающая за изменения на карте\r\n    onMapChange = (props, l, c) => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n        const keys = {\r\n            lat: c.latLng.lat(),\r\n            lng: c.latLng.lng(),\r\n            type: 'custom',\r\n            name: 'Marker'\r\n        };\r\n        const arr = this.state.markersPosition;\r\n        arr.push(keys);\r\n        this.setState({\r\n            markersPosition: arr\r\n        });\r\n        const markers = this.props.markers.concat(keys);\r\n        this.props.currentMarkers(markers);\r\n        if (this.props.toggle) {\r\n            this.props.toggleMarkers(false)\r\n        }\r\n    };\r\n    // информация о маркере\r\n    onMarkerClick = (props, marker) => {\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n    };\r\n\r\n    // установка маркера\r\n    setMarker() {\r\n        const markers = !this.props.toggle ? this.props.markers : [];\r\n        return Object.keys(markers).map((pos, index) => {\r\n            let marker = markers[pos];\r\n            return (\r\n                <Marker\r\n                    onClick={this.onMarkerClick}\r\n                    title={marker.name}\r\n                    position={marker}\r\n                    name={marker.name}\r\n                    key={index}\r\n                    icon={marker.icon}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    // как только компонент загрузился - загрузить базу\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        fetch(\"https://api.jsonbin.io/b/5c2957343f8bd92e4cc5fed1/latest\", {\r\n            method: \"GET\",\r\n            headers: {\"Content-type\": \"application/json\"}\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (this._isMounted) {\r\n                    console.log(data)\r\n                    const base = data;\r\n                    for(let item of base){\r\n                        if(!item.userName){\r\n                            item.userName = 'UserName';\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        dataBaseLoaded: true\r\n                    });\r\n                    this.props.setDatabase(base)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        this.setMarker();\r\n    }\r\n\r\n    // сохранение маркеров в redux и переключение флага\r\n    componentWillUnmount() {\r\n        this.props.currentMarkers(this.props.copyMarkers);\r\n        this._isMounted = false;\r\n    }\r\n\r\n    // отслеживание центра карты для точного отображения выбранных объектов\r\n    centerMoved = (mapProps, map) => {\r\n        const lat = map.center.lat();\r\n        const lng = map.center.lng();\r\n        const mapCenter = {lat: lat, lng: lng};\r\n        this.props.setCenter(mapCenter);\r\n    };\r\n    render() {\r\n        return (\r\n            <MDBContainer fluid style={{padding: \"0px\"}}>\r\n                <Panel/>\r\n                <Wrapper>\r\n                    <Map\r\n                        onDragend={this.centerMoved}\r\n                        disableDoubleClickZoom={true}\r\n                        scrollwheel={false}\r\n                        zoomControl={false}\r\n                        scaleControl={false}\r\n                        gestureHandling={\"greedy\"}\r\n                        onReady={props => this.props.setGoogleObject(props.google)}\r\n                        google={window.google}\r\n                        zoom={this.props.zoom}\r\n                        className={\"map\"}\r\n                        initialCenter={this.props.currentCenter}\r\n                        disableDefaultUI={true}\r\n                        onClick={this.onMapChange}\r\n                    >\r\n                        {this.setMarker(this.props.markers)}\r\n                        <InfoWindow\r\n                            marker={this.state.activeMarker}\r\n                            visible={this.state.showingInfoWindow}\r\n                        >\r\n                            <div>\r\n                                <h1>{this.state.selectedPlace.name}</h1>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </Map>\r\n                    <InfoDrawer/>\r\n                </Wrapper>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setCenter: center => dispatch(setCenter(center)),\r\n        currentMarkers: markers => dispatch(currentMarkers(markers)),\r\n        setDatabase: data => dispatch(setDatabase(data)),\r\n        toggleMarkers: toggle => dispatch(toggleMarkers(toggle)),\r\n        setGoogleObject: data => dispatch(setGoogleObject(data))\r\n    };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        zoom: state.map.zoom,\r\n        toggle: state.map.toggleMarkers,\r\n        currentCenter: state.map.center,\r\n        markers: state.map.markers,\r\n        loaded: state.map.loaded,\r\n        copyMarkers: state.map.copyMarkers,\r\n        dataBase: state.map.dataBase\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MapContainer);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {\r\n    currentMarkers,\r\n    loadedStatus,\r\n    setDatabase\r\n} from \"../../store/actions/map\";\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n        this.props.currentMarkers([]);\r\n        this.props.setDatabase([]);\r\n        this.props.loadedStatus(false);\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to={\"/\"}/>;\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setDatabase: () => dispatch(setDatabase([])),\r\n        loadedStatus: () => dispatch(loadedStatus(false)),\r\n        logout: () => dispatch(logout()),\r\n        currentMarkers: () => dispatch(currentMarkers([]))\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport { About } from \"./Components/About/About\";\r\nimport Nav from \"./Components/Navigation/Nav\";\r\nimport Auth from \"./Components/Authorization/Auth\";\r\nimport MapContainer from \"./Components/Map/Map\";\r\nimport { connect } from \"react-redux\";\r\nimport Logout from \"./Components/Logout/Logout\";\r\nimport { autoLogin } from \"./store/actions/auth\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.autoLogin();\r\n  }\r\n\r\n  render() {\r\n    let nav;\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MapContainer} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n      nav = (<Nav/>);\r\n    }\r\n    return (\r\n      <Layout>\r\n        { nav }\r\n        {routes}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    autoLogin: () => dispatch(autoLogin())\r\n  };\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(App)\r\n);\r\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null\r\n};\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.token\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    SET_CENTER,\r\n    LOADED_STATUS,\r\n    CURRENT_MARKERS,\r\n    TOGGLE_MARKERS,\r\n    MAP_ZOOMIN,\r\n    MAP_ZOOMOUT,\r\n    DATABASE,\r\n    GOOGLE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    center: {lat: 46.482753, lng: 30.735552},\r\n    loaded: false,\r\n    loadStatus: \"Load Markers\",\r\n    markers: [],\r\n    dataBase: [],\r\n    google: \"\",\r\n    copyMarkers: [],\r\n    toggleMarkers: false,\r\n    zoom: 15\r\n};\r\nexport default function mapReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GOOGLE:\r\n            return{\r\n                ...state,\r\n                google: action.data\r\n            };\r\n        case DATABASE:\r\n            return{\r\n                ...state,\r\n                dataBase: action.data\r\n            };\r\n        case SET_CENTER:\r\n            return {\r\n                ...state,\r\n                center: action.center\r\n            };\r\n        case LOADED_STATUS:\r\n            return {\r\n                ...state,\r\n                loaded: action.status\r\n            };\r\n        case CURRENT_MARKERS:\r\n            return {\r\n                ...state,\r\n                markers: action.markers,\r\n                copyMarkers: action.markers\r\n            };\r\n        case TOGGLE_MARKERS:\r\n            return {\r\n                ...state,\r\n                toggleMarkers: action.toggle\r\n            };\r\n        case MAP_ZOOMIN:\r\n            return {\r\n                ...state,\r\n                zoom: state.zoom + 1\r\n            };\r\n        case MAP_ZOOMOUT:\r\n            return {\r\n                ...state,\r\n                zoom: state.zoom - 1\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport authReducer from './auth'\r\nimport mapReducer from './map'\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    map: mapReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\nconst application = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n)\r\nReactDOM.render(application, document.getElementById('root'));\r\n"],"sourceRoot":""}
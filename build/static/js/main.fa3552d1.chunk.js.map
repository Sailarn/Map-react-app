{"version":3,"sources":["hoc/Layout/Layout.js","Components/About/About.js","Components/Navigation/Nav.js","Components/UI/Input/Input.js","store/actions/actionTypes.js","store/actions/auth.js","Components/Authorization/Auth.js","store/actions/map.js","hoc/MapWrapper/MapWrapper.js","Components/Map/Map.js","Components/Logout/Logout.js","App.js","store/reducers/auth.js","store/reducers/map.js","store/reducers/rootReducer.js","index.js"],"names":["Layout","react_default","a","createElement","this","props","children","Component","About","mdbreact","fluid","className","style","height","alignItems","center","Nav","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClick","setState","collapse","state","toggle","modal","isWideEnough","color","dark","expand","size","side","position","backdrop","isOpen","titleClass","tag","to","navbar","left","exact","right","React","Input","inputType","type","label","value","onChange","_ref","valid","touched","shouldValidate","length","isInvalid","errorMessage","AUTH_SUCCESS","AUTH_LOGOUT","MAP_ZOOMIN","MAP_ZOOMOUT","TOGGLE_MARKERS","SET_CENTER","CURRENT_MARKERS","LOADED_STATUS","autoLogout","time","dispatch","setTimeout","logout","localStorage","removeItem","authSuccess","token","Auth","isFormValid","formControls","email","validation","required","password","minLength","submitHandler","event","preventDefault","loginBtn","auth","registerBtn","onChangeHandler","controlName","objectSpread","control","target","validateControl","keys","forEach","name","isValid","trim","is","_this2","map","index","UI_Input_Input","key","count","padding","xl","onSubmit","renderInputs","connect","isLogin","asyncToGenerator","regenerator_default","mark","_callee2","authData","url","wrap","_context2","prev","next","returnSecureToken","_callee","rawResponse","data","expirationDate","_context","fetch","method","body","JSON","stringify","sent","json","Date","getTime","expiresIn","setItem","idToken","localId","stop","_x","apply","arguments","zoomMap","zoom","Wrapper","GoogleApiWrapper","apiKey","language","MapContainer","_isMounted","google","scrollwheel","disableDefaultUI","currentMarker","markersPosition","showingInfoWindow","activeMarker","selectedPlace","currentUserId","getItem","markersCopy","dataBase","saveStatus","onMapChange","l","c","lat","latLng","lng","copy","push","onMarkerClick","marker","turnOffOn","toggleMarkers","loadMarkers","loaded","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","item","userId","geo","markers","concat","err","return","loadedStatus","saveMarkers","update","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onChooseHandler","currentCenter","maps","Map","request","location","radius","requestedData","places","PlacesService","nearbySearch","results","res","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","geometry","rating","icon","centerMoved","mapProps","mapCenter","setCenter","pos","dist","title","_this3","headers","Content-type","then","response","status","catch","error","console","log","_this4","setMarker","currentMarkers","_this5","zIndex","pill","marginLeft","marginBottom","display","caret","defaultValue","currentSelected","MapWrapper","onDragend","disableDoubleClickZoom","zoomControl","scaleControl","gestureHandling","onReady","window","initialCenter","visible","Logout","Redirect","App","autoLogin","nav","routes","Switch","Route","path","component","isAuthenticated","Navigation_Nav","hoc_Layout_Layout","withRouter","initialState","loadStatus","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","application","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa3552d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Layout.css';\nclass Layout extends Component {\n    render(){\n        return (\n            <header>\n                { this.props.children }\n            </header>\n        )\n    }\n}\n\nexport default Layout;","import React from \"react\";\nimport { MDBContainer, Card, CardBody, CardTitle, Row } from \"mdbreact\";\nimport \"./About.css\";\n\nexport const About = props => {\n  return (\n    <MDBContainer fluid className=\"about-container\">\n      <Row style={{ height: \"100vh\", alignItems: \"center\" }} center>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"display-4 text-align-center\">My React first application</CardTitle>\n            <p className=\"h2-responsive\">\n              This small application was built in a week.\n            </p>\n            <p className=\"h3-responsive\">Started on</p>\n            <p className=\"h4-responsive\">19/11/2018</p>\n            <p className=\"h5-responsive\">Ended on</p>\n            <p className=\"h4-responsive\">26/11/2018</p>\n            <p className=\"h5-responsive\">Updated on 07/12/2018</p>\n            <p className=\"h5-responsive\">Second update on 30/12/2018 (small one)</p>\n            <p className=\"h5-responsive\">P.S: This is my first App ( ͡° ͜ʖ ͡°)</p>\n          </CardBody>\n        </Card>\n      </Row>\n    </MDBContainer>\n  );\n};\n","import React from \"react\";\nimport \"./activeStyle.css\";\nimport {\n  Navbar,\n  NavbarNav,\n  NavLink,\n  NavbarToggler,\n  NavbarBrand,\n  Collapse,\n  NavItem,\n  Container,\n  Modal,\n  ModalFooter,\n  ModalHeader\n} from \"mdbreact\";\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false,\n      modal: false\n    };\n  }\n  onClick = () => {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  };\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n  render() {\n    return (\n      <Navbar color=\"black\" dark expand=\"lg\">\n        <Container>\n          <Modal\n            className=\"text-black\"\n            size=\"lg\"\n            side\n            position=\"top\"\n            backdrop={true}\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n          >\n            <ModalHeader\n              className=\"text-center\"\n              titleClass=\"w-100\"\n              tag=\"p\"\n              toggle={this.toggle}\n            >\n              Are you sure?\n            </ModalHeader>\n            <ModalFooter className=\"justify-content-center\">\n              <NavLink className=\"btn btn-elegant\" to=\"/\" onClick={this.toggle}>Close</NavLink>\n              <NavLink className=\"btn btn-outline-danger waves-effect\" to=\"/logout\">Log out</NavLink>\n            </ModalFooter>\n          </Modal>\n          <NavbarBrand>\n            <strong className=\"white-text\">Map Application</strong>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.onClick} />\n          <Collapse isOpen={this.state.collapse} navbar>\n            <NavbarNav left>\n              <NavItem>\n                <NavLink exact to=\"/\">\n                  Map itself\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/about\">About</NavLink>\n              </NavItem>\n            </NavbarNav>\n            <NavbarNav right>\n              <NavItem>\n                <NavLink to=\"#!\" onClick={this.toggle}>Logout</NavLink>\n              </NavItem>\n            </NavbarNav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { MDBInput } from \"mdbreact\";\n\nfunction isInvalid({ valid, touched, shouldValidate, value }) {\n  if (value.length <= 0) {\n    return;\n  } else {\n    return !valid && shouldValidate && touched;\n  }\n}\n\nconst Input = props => {\n  const inputType = props.type || \"text\";\n  return (\n    <div>\n      <MDBInput\n        label={props.label}\n        type={inputType}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {isInvalid(props) ? <span>{props.errorMessage}</span> : null}\n    </div>\n  );\n};\n\nexport default Input;\n","export const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\nexport const MAP_ZOOMIN = 'MAP_ZOOMIN'\nexport const MAP_ZOOMOUT = 'MAP_ZOOMOUT'\n\nexport const TOGGLE_MARKERS = 'TOGGLE_MARKERS'\n\nexport const SET_CENTER = 'SET_CENTER'\n\nexport const CURRENT_MARKERS = 'CURRENT_MARKERS'\n\nexport const LOADED_STATUS = 'LOADED_STATUS'","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"./actionTypes\";\n\nexport function auth(email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n\n    let url =\n      \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBMLU3d72yGqRdNb3GOmqW53m3yjCHBJ7k\";\n\n    if (isLogin) {\n      url =\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBMLU3d72yGqRdNb3GOmqW53m3yjCHBJ7k\";\n    }\n    (async () => {\n      const rawResponse = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(authData)\n      });\n      const data = await rawResponse.json();\n      const expirationDate = new Date(\n        new Date().getTime() + data.expiresIn * 1000\n      );\n      localStorage.setItem(\"token\", data.idToken);\n      localStorage.setItem(\"userId\", data.localId);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n\n      dispatch(authSuccess(data.idToken));\n      dispatch(autoLogout(data.expiresIn));\n    })();\n  };\n}\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\n\nexport function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: AUTH_LOGOUT\n  };\n}\n\nexport function autoLogin() {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000)\n        );\n      }\n    }\n  };\n}\n\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  };\n}\n","import React, { Component } from \"react\";\nimport {\n  MDBBtn,\n  Animation,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport Input from \"../UI/Input/Input\";\nimport is from \"is_js\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../../store/actions/auth\";\n\nclass Auth extends Component {\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: \"\",\n        type: \"email\",\n        label: \"Enter your e-mail\",\n        errorMessage: \"Enter correct e-mail adress (example@mail.com)\",\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: \"\",\n        type: \"password\",\n        label: \"Enter your password\",\n        errorMessage: \"Enter at least 6 characters\",\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  };\n  submitHandler = event => {\n    event.preventDefault();\n  };\n  loginBtn = () => {\n    if (\n      !this.state.formControls.password.valid ||\n      !this.state.formControls.email.valid\n    ) {\n      return;\n    } else {\n      this.props.auth(\n        this.state.formControls.email.value,\n        this.state.formControls.password.value,\n        true\n      );\n    }\n  };\n  registerBtn = () => {\n    if (\n      !this.state.formControls.password.valid ||\n      !this.state.formControls.email.valid\n    ) {\n      return;\n    } else {\n      this.props.auth(\n        this.state.formControls.email.value,\n        this.state.formControls.password.value,\n        false\n      );\n    }\n  };\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n    let isValid = true;\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n    return isValid;\n  }\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.value = event.target.value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validation);\n\n    formControls[controlName] = control;\n\n    let isFormValid = true;\n\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n\n    this.setState({\n      formControls,\n      isFormValid\n    });\n  };\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <Animation type=\"fadeIn\" count={1}>\n        <MDBContainer style={{padding: '20px'}}>\n          <MDBRow>\n            <MDBCol className=\"mt-5\" xl=\"12\">\n              <MDBCard>\n                <MDBCardBody className=\"mx-4\">\n                  <p className=\"h1-responsive text-center mb-4\">Authorization</p>\n                  <form onSubmit={this.submitHandler}>\n                    {this.renderInputs()}\n                    <MDBRow center>\n                      <MDBBtn\n                        onClick={this.loginBtn}\n                        color=\"dark-green\"\n                        size=\"md\"\n                      >\n                        Sign In\n                      </MDBBtn>\n                      <MDBBtn\n                        onClick={this.registerBtn}\n                        color=\"mdb-color\"\n                        size=\"md\"\n                      >\n                        Sign up\n                      </MDBBtn>\n                    </MDBRow>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </Animation>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  };\n}\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Auth);\n","import {\n  MAP_ZOOMIN,\n  MAP_ZOOMOUT,\n  SET_CENTER,\n  CURRENT_MARKERS,\n  LOADED_STATUS,\n  TOGGLE_MARKERS\n} from \"./actionTypes\";\nexport function setCenter(center) {\n  return {\n    type: SET_CENTER,\n    center\n  };\n}\nexport function toggleMarkers(toggle) {\n  return {\n    type: TOGGLE_MARKERS,\n    toggle\n  };\n}\nexport function currentMarkers(markers) {\n  return {\n    type: CURRENT_MARKERS,\n    markers\n  };\n}\nexport function loadedStatus(status){\n  return{\n    type: LOADED_STATUS,\n    status\n  }\n}\nexport function zoomMap(zoom) {\n  return dispatch => {\n    if (zoom === true) {\n      dispatch(zoomIn());\n    } else {\n      dispatch(zoomOut());\n    }\n  };\n}\nexport function zoomIn() {\n  return {\n    type: MAP_ZOOMIN\n  };\n}\nexport function zoomOut() {\n  return {\n    type: MAP_ZOOMOUT\n  };\n}\n\n","import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { MDBCol, MDBRow } from \"mdbreact\";\n\nclass Wrapper extends Component {\n  render() {\n    return (\n      <MDBRow>\n        <MDBCol xl=\"12\" style={{height: '100vh', padding: '0px'}}>{this.props.children}</MDBCol>\n      </MDBRow>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDfXMtNQ9WiZVSmJx8FI0EwzFKhyzwM6vg&libraries=places\",\n  language: \"ru\"\n})(Wrapper);\n","import React, { Component } from \"react\";\nimport { Map, Marker, InfoWindow } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport {\n  setCenter,\n  zoomMap,\n  toggleMarkers,\n  currentMarkers,\n  loadedStatus\n} from \"../../store/actions/map\";\nimport Wrapper from \"../../hoc/MapWrapper/MapWrapper\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBBtn,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBBadge\n} from \"mdbreact\";\nimport \"./Map.css\";\n\nclass MapContainer extends Component {\n  _isMounted = false; //во избежание ошибки leak memory\n  state = {\n    google: \"\", //ссылка на this.props.google ибо карта обернута в еще один hoc и нет возможности достать его обычным путем\n    scrollwheel: false, //запрет на масштабирование колесиком\n    disableDefaultUI: true, // убран стандартный UI\n    currentMarker: [], // текущий маркер\n    markersPosition: [], // массив всех текущих маркеров\n    showingInfoWindow: false, // состояние инфо окна маркера (вкл/выкл)\n    activeMarker: {}, // активный маркер (для триггера инфо окна)\n    selectedPlace: {}, // инфо о выбранном маркере\n    currentUserId: localStorage.getItem(\"userId\"), // текущий id пользователя\n    markersCopy: [], // копия массива с текущими маркерами\n    dataBase: [], // маленькая база данных\n    saveStatus: \"Save Markers\" // статус сохранения\n  };\n  // функция отвечающая за изменения на карте\n  onMapChange = (props, l, c) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n    const keys = {\n      lat: c.latLng.lat(),\n      lng: c.latLng.lng()\n    };\n    const copy = this.state.markersPosition;\n    copy.push(keys);\n    this.setState({\n      markersPosition: copy,\n      markersCopy: copy,\n      currentMarker: keys\n    });\n  };\n  // информация о маркере\n  onMarkerClick = (props, marker) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n  // установка маркера\n  setMarker() {\n    return Object.keys(this.state.markersPosition).map((pos, index) => {\n      let marker = this.state.markersPosition[pos];\n      return (\n        <Marker\n          onClick={this.onMarkerClick}\n          title={marker.name}\n          position={marker}\n          name={marker.name}\n          key={index}\n          icon={marker.icon}\n        />\n      );\n    });\n  }\n  // вкл/выкл показ маркеров\n  turnOffOn = () => {\n    if (this.props.toggle === false) {\n      this.props.toggleMarkers(true);\n      this.setState({\n        markersPosition: []\n      });\n    } else {\n      this.props.toggleMarkers(false);\n      this.setState({\n        markersPosition: this.state.markersCopy\n      });\n    }\n  };\n  // загрузка маркеров из базы\n  loadMarkers = () => {\n    if (this.props.loaded === false) {\n      for (let item of this.state.dataBase) {\n        if (\n          item.userId === this.state.currentUserId &&\n          item.geo !== this.state.markersPosition\n        ) {\n          let markers = item.geo.concat(this.state.markersPosition);\n          this.setState({\n            markersPosition: markers,\n            markersCopy: markers\n          });\n          this.props.toggleMarkers(false);\n        }\n      }\n    }\n    this.props.loadedStatus(true);\n  };\n  // сохранение маркеров в локальный state и вызов функции отправки на сервер\n  saveMarkers = () => {\n    let data = this.state.dataBase;\n    if (data.length <= 0) {\n      data.push({\n        userId: this.state.currentUserId,\n        geo: this.state.markersPosition\n      });\n      this.setState({\n        dataBase: data\n      });\n      this.update();\n      return;\n    }\n    if (data.length > 0) {\n      for (let item of data) {\n        if (item.userId === this.state.currentUserId) {\n          item.geo = this.state.markersPosition;\n          this.update();\n          return;\n        }\n      }\n      for (let item2 of data) {\n        if (item2.userId !== this.state.currentUserId) {\n          data.push({\n            userId: this.state.currentUserId,\n            geo: this.state.markersPosition\n          });\n          this.setState({\n            dataBase: data\n          });\n          this.update();\n          return;\n        }\n      }\n    }\n  };\n  // отправка на сервер\n  update() {\n    fetch(\"https://api.jsonbin.io/b/5c2957343f8bd92e4cc5fed1\", {\n      method: \"PUT\",\n      body: JSON.stringify(this.state.dataBase),\n      headers: { \"Content-type\": \"application/json\" }\n    })\n      .then(response => {\n        if (response.status > 200) {\n          this.setState({\n            saveStatus: \"Saving...\"\n          });\n        } else if (response.status === 200) {\n          this.setState({\n            saveStatus: \"Markers Saved\"\n          });\n          setTimeout(() => {\n            this.setState({\n              saveStatus: \"Save Markers\"\n            });\n          }, 1000);\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n  // выбор что отобразить на карте\n  onChooseHandler = event => {\n    if (event.target.value === \"None\" || event.target.value === undefined) {\n      this.setState({\n        markersCopy: [],\n        markersPosition: []\n      });\n    } else if (event.target.value !== \"\") {\n      const google = this.state.google;\n      const center = this.props.currentCenter;\n      const map = new google.maps.Map(\"\", { center: center });\n      const request = {\n        location: center,\n        radius: \"1000\",\n        type: event.target.value\n      };\n      const requestedData = [];\n      const service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(\n        request,\n        (this.results = res => {\n          for (let item of res) {\n            requestedData.push({\n              lat: item.geometry.location.lat(),\n              lng: item.geometry.location.lng(),\n              name: item.name,\n              rating: item.rating,\n              icon:\n                \"https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Marker-Outside-Chartreuse.png\"\n            });\n          }\n          this.setState({\n            markersCopy: requestedData,\n            markersPosition: requestedData\n          });\n        })\n      );\n    }\n  };\n  // как только компонент загрузился - загрузить базу\n  componentDidMount() {\n    if (this.state.markersPosition.length <= 0 && this.props.markers !== \"\") {\n      this.setState({\n        markersCopy: this.state.markersPosition.concat(this.props.markers)\n      });\n      if (this.props.toggle === false) {\n        this.setState({\n          markersPosition: this.state.markersPosition.concat(this.props.markers)\n        });\n      }\n    }\n    this._isMounted = true;\n    fetch(\"https://api.jsonbin.io/b/5c2957343f8bd92e4cc5fed1/latest\", {\n      method: \"GET\",\n      headers: { \"Content-type\": \"application/json\" }\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (this._isMounted) {\n          this.setState({\n            dataBase: data\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    this.setMarker();\n  }\n  // сохранение маркеров в redux и переключение флага\n  componentWillUnmount() {\n    this.props.currentMarkers(this.state.markersCopy);\n    this._isMounted = false;\n  }\n  // отслеживание центра карты для точного отображения выбранных объектов\n  centerMoved = (mapProps, map) => {\n    const lat = map.center.lat();\n    const lng = map.center.lng();\n    const mapCenter = { lat: lat, lng: lng };\n    this.props.setCenter(mapCenter);\n  };\n  render() {\n    return (\n      <MDBContainer fluid style={{ padding: \"0px\" }}>\n        <MDBContainer\n          fluid\n          style={{ position: \"absolute\", zIndex: \"100\", padding: \"0px\" }}\n        >\n          <MDBRow center className=\"w-100\">\n            <MDBBtn color=\"mdb-color\" onClick={() => this.props.zoomMap(true)}>\n              ZoomIn\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={() => this.props.zoomMap(false)}>\n              ZoomOut\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.turnOffOn}>\n              {this.props.toggle === false\n                ? \"Turn Off Markers\"\n                : \"Turn On Markers\"}\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.loadMarkers}>\n              {this.props.loaded === false ? \"Load Markers\" : \"Loaded\"}\n            </MDBBtn>\n            <MDBBtn color=\"mdb-color\" onClick={this.saveMarkers}>\n              {this.state.saveStatus}\n              <MDBBadge\n                color=\"info\"\n                pill\n                style={{ marginLeft: \"5px\", marginBottom: \"5px\" }}\n              >\n                {this.state.markersPosition.length}\n              </MDBBadge>\n            </MDBBtn>\n            <MDBDropdown\n              style={{ display: \"inline-flex\" }}\n              onClick={this.onChooseHandler}\n            >\n              <MDBDropdownToggle\n                caret\n                color=\"mdb-color\"\n                defaultValue={this.state.currentSelected}\n              >\n                Select type\n              </MDBDropdownToggle>\n              <MDBDropdownMenu>\n                <MDBDropdownItem value=\"None\">None</MDBDropdownItem>\n                <MDBDropdownItem value=\"gas_station\">\n                  Gas stations\n                </MDBDropdownItem>\n                <MDBDropdownItem value=\"pharmacy\">Pharmacies</MDBDropdownItem>\n                <MDBDropdownItem value=\"school\">Schools</MDBDropdownItem>\n                <MDBDropdownItem value=\"restaurant\">\n                  Restaurants\n                </MDBDropdownItem>\n              </MDBDropdownMenu>\n            </MDBDropdown>\n          </MDBRow>\n        </MDBContainer>\n        <Wrapper>\n          <Map\n            onDragend={this.centerMoved}\n            disableDoubleClickZoom={true}\n            scrollwheel={false}\n            zoomControl={false}\n            scaleControl={false}\n            gestureHandling={\"greedy\"}\n            onReady={props =>\n              this.setState({\n                google: props.google\n              })\n            }\n            google={window.google}\n            zoom={this.props.zoom}\n            className={\"map\"}\n            initialCenter={this.props.currentCenter}\n            disableDefaultUI={true}\n            onClick={this.onMapChange}\n          >\n            {this.setMarker(this.props.markers)}\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n            >\n              <div>\n                <h1>{this.state.selectedPlace.name}</h1>\n              </div>\n            </InfoWindow>\n          </Map>\n        </Wrapper>\n      </MDBContainer>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    zoomMap: zoom => dispatch(zoomMap(zoom)),\n    toggleMarkers: toggle => dispatch(toggleMarkers(toggle)),\n    setCenter: center => dispatch(setCenter(center)),\n    currentMarkers: markers => dispatch(currentMarkers(markers)),\n    loadedStatus: loaded => dispatch(loadedStatus(loaded))\n  };\n}\nfunction mapStateToProps(state) {\n  return {\n    zoom: state.map.zoom,\n    toggle: state.map.toggleMarkers,\n    currentCenter: state.map.center,\n    markers: state.map.markers,\n    loaded: state.map.loaded\n  };\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MapContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { logout } from \"../../store/actions/auth\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return <Redirect to={\"/\"} />;\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout())\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Logout);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { About } from \"./Components/About/About\";\nimport Nav from \"./Components/Navigation/Nav\";\nimport Auth from \"./Components/Authorization/Auth\";\nimport MapContainer from \"./Components/Map/Map\";\nimport { connect } from \"react-redux\";\nimport Logout from \"./Components/Logout/Logout\";\nimport { autoLogin } from \"./store/actions/auth\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  }\n\n  render() {\n    let nav;\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact component={MapContainer} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n      nav = (<Nav/>);\n    }\n    return (\n      <Layout>\n        { nav }\n        {routes}\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null\n};\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.token\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\r\n  SET_CENTER,\r\n  LOADED_STATUS,\r\n  CURRENT_MARKERS,\r\n  TOGGLE_MARKERS,\r\n  MAP_ZOOMIN,\r\n  MAP_ZOOMOUT\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  center: { lat: 46.482753, lng: 30.735552 },\r\n  loaded: false,\r\n  loadStatus: \"Load Markers\",\r\n  markers: \"\",\r\n  toggleMarkers: false,\r\n  zoom: 15\r\n};\r\nexport default function mapReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CENTER:\r\n      return {\r\n        ...state,\r\n        center: action.center\r\n      };\r\n    case LOADED_STATUS:\r\n      return {\r\n        ...state,\r\n        loaded: action.status\r\n      };\r\n    case CURRENT_MARKERS:\r\n      return {\r\n        ...state,\r\n        markers: action.markers\r\n      };\r\n    case TOGGLE_MARKERS:\r\n      return {\r\n        ...state,\r\n        toggleMarkers: action.toggle\r\n      };\r\n    case MAP_ZOOMIN:\r\n      return {\r\n        ...state,\r\n        zoom: state.zoom + 1\r\n      };\r\n    case MAP_ZOOMOUT:\r\n      return {\r\n        ...state,\r\n        zoom: state.zoom - 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\nimport authReducer from './auth'\nimport mapReducer from './map'\n\nexport default combineReducers({\n    auth: authReducer,\n    map: mapReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n    rootReducer, \n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\nconst application = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\nReactDOM.render(application, document.getElementById('root'));\n"],"sourceRoot":""}